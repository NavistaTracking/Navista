rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if this is the first user document
    function isFirstUser() {
      return !exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        getCount(/databases/$(database)/documents/users) == 0;
    }

    // ✅ Modified rule: Allow public read access to "shipments" collection
    match /shipments/{shipmentId} {
      allow read: if true; // Public can read shipment details without authentication

      // ✅ Only authenticated users can create, update, or delete shipment data
      allow create, update, delete: if isAuthenticated(); 
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow create: if isAuthenticated() && (isOwner(userId) || isFirstUser());
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAuthenticated();
    }

    // User preferences collection rules - More permissive to fix the error
    match /userPreferences/{userId} {
      // Allow read if authenticated and is the owner
      allow read: if isAuthenticated() && isOwner(userId);
      
      // Allow create if authenticated and is the owner
      allow create: if isAuthenticated() && isOwner(userId);
      
      // Allow update if authenticated and is the owner
      allow update: if isAuthenticated() && isOwner(userId);
      
      // Allow delete if authenticated and is the owner
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Tracking collection rules
    match /tracking/{trackingId} {
      allow read: if true; // Allow public read access to tracking information
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
    
    // Tracking history collection rules
    match /trackingHistory/{historyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
  }
} 